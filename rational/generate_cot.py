import json
import os
import random


def convert_json_to_target_format(original_file_path, distill_judge_file_path, output_file, et_file_path, data_key):
    # 加载数据
    with open(original_file_path, 'r') as f1:
        data1 = json.load(f1)
    with open(distill_judge_file_path, 'r') as f2:
        data2 = json.load(f2)

    json_list = []
    et_list = []

    for item1, item2 in zip(data1[data_key], data2[data_key]):
        if item2["result"]["orig"]["is_correct"] == True:
            if item1["result"]["orig"]["prediction"] == 1 and item2["result"]["orig"]["prediction"] == 1:
                chosen, rejected = "Output (a)", "Output (b)"
            elif item1["result"]["orig"]["prediction"] == 2 and item2["result"]["orig"]["prediction"] == 2:
                chosen, rejected = "Output (b)", "Output (a)"
            else:
                continue
            output = item1["result"]["orig"]["completion"]
        elif item2["result"]["swap"]["is_correct"] == True:
            item1["response1"], item1["response2"] = item1["response2"], item1["response1"]
            if item1["result"]["swap"]["prediction"] == 1 and item2["result"]["swap"]["prediction"] == 1:
                chosen, rejected = "Output (a)", "Output (b)"
            elif item1["result"]["swap"]["prediction"] == 2 and item2["result"]["swap"]["prediction"] == 2:
                chosen, rejected = "Output (b)", "Output (a)"
            else:
                continue
            output = item1["result"]["swap"]["completion"]
        else:
            continue

        # Randomly swap the outputs
        if random.choice([True, False]):
            chosen, rejected = rejected, chosen
            output = output.replace(chosen, "【IMCRAZY】")
            output = output.replace(rejected, chosen)
            output = output.replace("【IMCRAZY】", rejected)
            item1["response1"], item1["response2"] = item1["response2"], item1["response1"]
        json_object = {
            "instruction": f"""As an evaluation expert, given an instruction and its two possible outputs, compare the outputs. Below are the instruction and its candidate outputs:

# Instruction:
{item1["instruction"]}

# Output (a):
{item1["response1"]}

# Output (b):
{item1["response2"]}


Given that {chosen} is better than {rejected}, please provide the rationale and end with "Therefore, {chosen} is better.":""",
            "input": "",
            "system": """You are an evaluation expert. Your goal is to provide the rationale based on the given evaluation result.""",
            "output": output
        }
        et_object = {
            "system": """You are a helpful assistant in evaluating the quality of the outputs for a given instruction. Your goal is to select the best output for the given instruction.""",
            "instruction": f"""After giving a brief explanation, select the Output (a) or Output (b) that is better for the given instruction. The two outputs are generated by two different AI chatbots respectively.

Here are some rules of the evaluation:
(1) You should prioritize evaluating whether the output honestly/precisely/closely executes the instruction, then consider its helpfulness, accuracy, level of detail, harmlessness, etc.
(2) Outputs should NOT contain more/less than what the instruction asks for, as such outputs do NOT precisely execute the instruction.
(3) You should avoid any potential bias and your judgment should be as objective as possible. For example, the order in which the outputs were presented should NOT affect your judgment, as Output (a) and Output (b) are **equally likely** to be the better.

You should first provide a brief explanation of your evaluation, and then always end your response with either "Therefore, Output (a) is better." or "Therefore, Output (b) is better." verbatim.
Do NOT say both / neither are good.
Do NOT output any other words.

# Instruction:
{item1["instruction"]}

# Output (a):
{item1["response1"]}

# Output (b):
{item1["response2"]}

# Decision (Give a brief explanation of your evaluation followed by either "Therefore, Output (a) is better." or "Therefore, Output (b) is better." verbatim. In your explanation, you should always use "Output (a)" or "Output (b)" to refer to the two outputs respectively.):""",
            "input": "",
            "output": output
        }
        # Append the converted data to the list
        json_list.append(json_object)
        et_list.append(et_object)

    output_dir = os.path.dirname(output_file)
    if output_dir and not os.path.exists(output_dir):
        os.makedirs(output_dir)
    # Write the converted data to the output file in JSON format
    with open(output_file, 'w') as file:
        json.dump(json_list, file, indent=4)

    with open(et_file_path, 'w') as file:
        json.dump(et_list, file, indent=4)


original_file_path = '../result/Llama-3.2-3B-Instruct/arena.json'
distill_judge_file_path = '../result/Llama-3.2-3B-Instruct-arena_distlled_et_lr_1e-5_epoch_3/arena.json'
cot_file_path = '../data/arena_rationale_distill.json'
et_file_path = '../data/arena_et_cot_distill.json'
data_key = 'arena'

convert_json_to_target_format(
    original_file_path, distill_judge_file_path, cot_file_path, et_file_path, data_key)

print("Over!")
